% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/communicate.R
\name{mcControls}
\alias{mcControls}
\alias{mcControlsApp}
\alias{mcControlsUI}
\alias{mcControlsServer}
\title{Enter metacheck controls through a shiny module}
\usage{
mcControlsApp()

mcControlsUI(id, translator = mc_translator())

mcControlsServer(id, translator = mc_translator())
}
\arguments{
\item{id}{The id string to be namespaced (optional).}

\item{translator}{A \link[shiny.i18n:Translator]{shiny.i18n::Translator} object or \code{NULL} for english-only defaults.
Strings inside the module UI are marked as translateable.
You can pass a translator object included in the package,
or can create your own \code{translator} using \link[shiny.i18n:Translator]{shiny.i18n::Translator}.
This must not be a reactive, it is only set at shiny startup.
To update the language reactively \emph{during} a shiny session, see \code{lang}.}
}
\description{
Enter metacheck controls through a shiny module
}
\section{Related Functions and Methods}{
\subsection{Functions}{
\itemize{
\item \code{mcControlsApp}: Test App
}
\itemize{
\item \code{mcControlsUI}: Module UI
}
\itemize{
\item \code{mcControlsServer}: Module server
}}}

\seealso{
Other communicate: 
\code{\link{emailReport}()},
\code{\link{email}},
\code{\link{mcApp}()},
\code{\link{report}},
\code{\link{runMetacheck}()}
}
\concept{communicate}
