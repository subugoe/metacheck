% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/communicate.R
\name{runMetacheck}
\alias{runMetacheck}
\title{Start web application}
\usage{
runMetacheck(...)
}
\arguments{
\item{...}{
  Arguments passed on to \code{\link[rmarkdown:run]{rmarkdown::run}}
  \describe{
    \item{\code{file}}{Path to the R Markdown document to launch in a web browser.
Defaults to \code{index.Rmd} in the current working directory, but may be
\code{NULL} to skip launching a browser.}
    \item{\code{dir}}{The directory from which to to read input documents. Defaults to
the parent directory of \code{file}.}
    \item{\code{default_file}}{The file to serve at the Shiny server's root URL. If
\code{NULL} (the default), a sensible default is chosen (see Details)}
    \item{\code{auto_reload}}{If \code{TRUE} (the default), automatically reload the
Shiny application when the file currently being viewed is changed on disk.}
    \item{\code{shiny_args}}{Additional arguments to \code{\link[shiny:runApp]{runApp}}.}
    \item{\code{render_args}}{Additional arguments to \code{\link[rmarkdown]{render}}.}
  }}
}
\value{
Invisible NULL.
}
\description{
Start a Shiny server for the given document, and render it for display.
}
\details{
The \code{run} function runs a Shiny document by starting a Shiny
server associated with the document. The \code{shiny_args} parameter can be
used to configure the server; see the \code{\link[shiny:runApp]{runApp}}
documentation for details.

Once the server is started, the document will be rendered using
\code{\link[rmarkdown]{render}}. The server will initiate a render of the document
whenever necessary, so it is not necessary to call \code{run} every time
the document changes: if \code{auto_reload} is \code{TRUE}, saving the
document will trigger a render. You can also manually trigger a render by
reloading the document in a Web browser.

The server will render any R Markdown (\code{.Rmd}) document in \code{dir};
the \code{file} argument specifies only the initial document to be
rendered and viewed. You can therefore link to other documents in the
directory using standard Markdown syntax, e.g.
\code{[Analysis Page 2](page2.Rmd)}.

If \code{default_file} is not specified, nor is a file specified on the
URL, then the default document to serve at \code{/} is chosen from (in
order of preference):
\itemize{
  \item{If \code{dir} contains only one \code{Rmd}, that \code{Rmd}.}
  \item{The file \file{index.Rmd}, if it exists in \code{dir}.}
  \item{The first \code{Rmd} that has \code{runtime: shiny} in its YAML metadata.}
  \item{The file \file{index.html} (or \file{index.htm}), if it exists in \code{dir}.}
}

If you wish to share R code between your documents, place it in a file
named \code{global.R} in \code{dir}; it will be sourced into the global
environment.
}
\examples{
\dontrun{
# Run the Shiny document "index.Rmd" in the current directory
rmarkdown::run()

# Run the Shiny document "shiny_doc.Rmd" on port 8241
rmarkdown::run("shiny_doc.Rmd", shiny_args = list(port = 8241))
}
}
\seealso{
Other communicate: 
\code{\link{emailReport}()},
\code{\link{mcControls}},
\code{\link{render_email}()},
\code{\link{report}},
\code{\link{smtp_send_metacheck}()}
}
\concept{communicate}
