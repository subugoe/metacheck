% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spreadsheet.R
\name{spreadsheet}
\alias{spreadsheet}
\alias{create_ss}
\alias{write_xlsx_mc}
\alias{add_attachment_mc}
\alias{create_and_attach_ss}
\title{Store individual results in a spreadsheet}
\usage{
create_ss(dois = doi_examples$good[1:10])

write_xlsx_mc(x, path = fs::file_temp(ext = "xlsx"), ...)

add_attachment_mc(
  email = blastula::prepare_test_message(),
  file,
  translator = mc_translator()
)

create_and_attach_ss(dois = doi_examples$good[1:10], ...)
}
\arguments{
\item{dois}{Vector of DOIs, as created by, or coerceable to \code{\link[biblids:doi]{biblids::doi()}}.}

\item{x}{data frame or named list of data frames that will be sheets in the xlsx}

\item{path}{a file name to write to}

\item{...}{
  Arguments passed on to \code{\link[writexl:write_xlsx]{writexl::write_xlsx}}
  \describe{
    \item{\code{col_names}}{write column names at the top of the file?}
    \item{\code{format_headers}}{make the \code{col_names} in the xlsx centered and bold}
    \item{\code{use_zip64}}{use \href{https://en.wikipedia.org/wiki/Zip_(file_format)#ZIP64}{zip64}
to enable support for 4GB+ xlsx files. Not all platforms can read this.}
  }}

\item{email}{The email message object, as created by the \code{\link[blastula:compose_email]{compose_email()}}
function. The object's class is \code{email_message}.}

\item{file}{The filename for the file to be attached.}

\item{translator}{A \link[shiny.i18n:Translator]{shiny.i18n::Translator} object or \code{NULL} for english-only defaults.
Strings inside the module UI are marked as translateable.
You can pass a translator object included in the package,
or can create your own \code{translator} using \link[shiny.i18n:Translator]{shiny.i18n::Translator}.
This must not be a reactive, it is only set at shiny startup.
To update the language reactively \emph{during} a shiny session, see \code{lang}.}
}
\value{
A list of tibbles
}
\description{
Store individual results in a spreadsheet
}
\details{
The spreadsheet includes these sheets:
\itemize{
\item \code{cr_overview}: Overview results
\item \code{cc_license_check}: Detailed results licensing check
\item \code{tdm}: Detailed results full text links and TDM
\item \code{funder_info}: Funding information from Crossref
\item \code{pretest}: Results of the pretest
}
}
\section{Related Functions and Methods}{
\subsection{Functions}{
\itemize{
\item \code{create_ss}: Create individual results
}
\itemize{
\item \code{write_xlsx_mc}: Write out file
}
\itemize{
\item \code{add_attachment_mc}: Attach file to email
}
\itemize{
\item \code{create_and_attach_ss}: Create and attach individual results to email
}}}

\seealso{
Other communicate: 
\code{\link{compose_attach_send_email_promise}()},
\code{\link{email}},
\code{\link{mcApp}()},
\code{\link{mcControls}},
\code{\link{report}},
\code{\link{runMetacheck}()}
}
\concept{communicate}
